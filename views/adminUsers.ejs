<!DOCTYPE html>
<html lang="en">
    
<head>
    <%- include('partials/header') %>
    <link rel="stylesheet" href="/css/table-styles.css">
</head>
<body>
    <%- include('partials/navbar') %>
    
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>User Management</h2>
            <button class="table-action-btn btn-view" data-bs-toggle="modal" data-bs-target="#addUserModal">
                <i class="bi bi-person-plus"></i> Add User
            </button>
        </div>

        <div class="card">
            <div class="card-body">
                <table class="custom-table">
                    <thead>
                        <tr>
                            <th>No</th> 
                            <th>Username</th>
                            <th>Role</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% users.forEach(function(user, index) { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= user.username %></td>
                                <td>
                                    <span class="role-badge <%= user.role === 'Admin' ? 'role-admin' : 'role-user' %>">
                                        <%= user.role %>
                                    </span>
                                </td>
                                <td>
                                    <button class="table-action-btn btn-edit" onclick="editUser(<%= JSON.stringify(user) %>)">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button class="table-action-btn btn-delete" onclick="deleteUser(<%= user.id %>)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>

                <!-- Add pagination -->
                <% if (typeof pagination !== 'undefined') { %>
                    <%- include('partials/pagination', { pagination: pagination }) %>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Add User Modal -->
    <div class="modal fade" id="addUserModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addUserForm">
                        <div class="mb-3">
                            <label class="form-label">Username</label>
                            <input type="text" class="form-control" name="username" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Password</label>
                            <input type="password" class="form-control" name="password" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Role</label>
                            <select class="form-select" name="role" required>
                                <option value="User">User</option>
                                <option value="Admin">Admin</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="saveUser()">Save User</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit User Modal -->
    <div class="modal fade" id="editUserModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editUserForm">
                        <input type="hidden" name="id">
                        <div class="mb-3">
                            <label class="form-label">Username</label>
                            <input type="text" class="form-control" name="username" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">New Password (optional)</label>
                            <input type="password" class="form-control" name="password">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Role</label>
                            <select class="form-select" name="role" required>
                                <option value="User">User</option>
                                <option value="Admin">Admin</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="updateUser()">Update User</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        async function saveUser() {
            const form = document.getElementById('addUserForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData);

            try {
                const response = await fetch('/api/users', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    const currentUrl = new URL(window.location.href);
                    location.href = currentUrl.pathname + currentUrl.search; // Maintains current page
                } else {
                    const errorData = await response.json();
                    alert(errorData.message || 'Failed to add user');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error adding user');
            }
        }

        function editUser(user) {
            const form = document.getElementById('editUserForm');
            form.id.value = user.id;
            form.username.value = user.username;
            form.role.value = user.role;
            new bootstrap.Modal(document.getElementById('editUserModal')).show();
        }

        async function updateUser() {
            const form = document.getElementById('editUserForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData);

            try {
                const response = await fetch(`/api/users/${data.id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    const currentUrl = new URL(window.location.href);
                    location.href = currentUrl.pathname + currentUrl.search; // Maintains current page
                } else {
                    alert('Failed to update user');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function deleteUser(id) {
            if (!confirm('Are you sure you want to delete this user?')) return;

            try {
                const response = await fetch(`/api/users/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'same-origin' 
                });

                if (response.ok) {
                    // Show success message
                    alert('User deleted successfully');
                    const currentUrl = new URL(window.location.href);
                    location.href = currentUrl.pathname + currentUrl.search; 
                } else {
                    const error = await response.json();
                    alert(error.message || 'Failed to delete user');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error deleting user');
            }
        }
    </script>
</body>
</html>
