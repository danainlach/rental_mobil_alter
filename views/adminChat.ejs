<!DOCTYPE html>
<html>
<head>
    <%- include('partials/header') %>
    <style>
        .chat-list {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
        }
        .chat-user {
            padding: 10px 15px;
            margin: 5px 0;
            cursor: pointer;
            border-radius: 5px;
            transition: all 0.3s ease;
        }
        .chat-user:hover {
            background: #e9ecef;
        }
        .chat-user.active {
            background: #007bff;
            color: white;
        }
        .chat-container {
            height: 60vh;
            overflow-y: auto;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
            margin-bottom: 20px;
        }
        .message-wrapper {
            display: flex;
            flex-direction: column;
            margin: 10px 0;
        }
        .message-sender {
            font-size: 0.8rem;
            margin-bottom: 4px;
            color: #666;
        }
        .message-bubble {
            max-width: 70%;
            padding: 10px 15px;
            border-radius: 15px;
            word-wrap: break-word;
            position: relative;
        }
        .sent {
            align-self: flex-end;
        }
        .sent .message-bubble {
            background: #007bff;
            color: white;
            border-bottom-right-radius: 5px;
            margin-left: auto;
        }
        .received {
            align-self: flex-start;
        }
        .received .message-bubble {
            background: white;
            border-bottom-left-radius: 5px;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }
        .message-time {
            font-size: 0.75rem;
            color: #666;
            margin-top: 5px;
        }
        .sent .message-time {
            text-align: right;
        }
        .chat-input {
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>
    
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-4">
                <div class="chat-list">
                    <h5 class="mb-4">Chat Users</h5>
                    <% users.forEach(function(chatUser) { %>
                        <div class="chat-user <%= selectedUser && selectedUser.id === chatUser.id ? 'active' : '' %>"
                             onclick="location.href='/admin/chat/<%= chatUser.id %>'">
                            <i class="bi bi-person-circle"></i> <%= chatUser.username %>
                        </div>
                    <% }); %>
                </div>
            </div>
            
            <div class="col-md-8">
                <% if (selectedUser) { %>
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Chat with <%= selectedUser.username %></h5>
                            <button id="refreshChat" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-arrow-clockwise"></i> Refresh
                            </button>
                        </div>
                        <div class="card-body p-0">
                            <div class="chat-container" id="chatContainer">
                                <% messages.forEach(function(msg) { %>
                                    <div class="message-wrapper <%= msg.senderId === 1 ? 'sent' : 'received' %>">
                                        <div class="message-sender" style="<%= msg.senderId === 1 ? 'text-align: right;' : 'text-align: left;' %>">
                                            <% if (msg.senderId === 1) { %>
                                                <span class="badge bg-danger">Admin</span>
                                            <% } else { %>
                                                <span class="badge bg-primary"><%= selectedUser.username %></span>
                                            <% } %>
                                        </div>
                                        <div class="message-bubble">
                                            <%= msg.message %>
                                            <div class="message-time" style="color: <%= msg.senderId === 1 ? '#fff' : '#666' %>;">
                                                <%= new Date(msg.createdAt).toLocaleString() %>
                                            </div>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                            
                            <div class="chat-input">
                                <form id="messageForm" class="d-flex">
                                    <input type="text" id="messageText" class="form-control me-2" 
                                           placeholder="Type your message...">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-send"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                <% } else { %>
                    <div class="text-center p-5">
                        <i class="bi bi-chat-dots" style="font-size: 3rem;"></i>
                        <p class="mt-3">Select a user to start chatting</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <script>
        const messageForm = document.getElementById('messageForm');
        const chatContainer = document.getElementById('chatContainer');
        const refreshButton = document.getElementById('refreshChat');

        // Scroll to bottom of chat
        if (chatContainer) {
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        // Manual refresh when button is clicked
        if (refreshButton) {
            refreshButton.onclick = () => {
                location.reload();
            };
        }

        if (messageForm) {
            const messageInput = document.getElementById('messageText');
            
            // Add input event listener to detect typing
            messageInput.addEventListener('input', () => {
                isTyping = true;
                // Reset typing flag after user stops typing for 1 second
                clearTimeout(messageInput.timeout);
                messageInput.timeout = setTimeout(() => {
                    isTyping = false;
                }, 1000);
            });

            messageForm.onsubmit = async (e) => {
                e.preventDefault();
                const messageText = document.getElementById('messageText');
                const message = messageText.value;
                if (!message.trim()) return;

                try {
                    const response = await fetch('/api/messages', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ 
                            message, 
                            receiverId: <%= selectedUser ? selectedUser.id : null %> 
                        })
                    });
                    
                    if (response.ok) {
                        messageText.value = '';
                        location.reload();
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            };
        }
    </script>
</body>
</html>
