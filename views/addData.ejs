<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tambah Item</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/add-data.css">
</head>

<body>
    <div class="container">
        <h1 id="judul" class="text-center mb-5">Tambah Mobil Baru</h1>
        
        <div class="form-container">
            <form id="itemForm" method="POST" enctype="multipart/form-data">
                <div class="form-section">
                    <div class="mb-4">
                        <label for="nama" class="form-label">Nama Mobil</label>
                        <input type="text" id="nama" class="form-control" required placeholder="Masukkan nama mobil">
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <label for="stok" class="form-label">Stok Mobil</label>
                            <input type="number" id="stok" class="form-control" min="0" required placeholder="Jumlah unit">
                        </div>
                        <div class="col-md-6 mb-4">
                            <label for="harga" class="form-label">Harga Sewa/Hari</label>
                            <input type="number" id="harga" class="form-control" min="0" required placeholder="Rp">
                        </div>
                    </div>
                </div>

                <div class="form-section">
                    <div class="mb-4">
                        <label for="keterangan" class="form-label">Keterangan Mobil</label>
                        <textarea id="keterangan" class="form-control" rows="3" required placeholder="Deskripsi lengkap mobil"></textarea>
                    </div>
                    <div class="mb-4">
                        <label for="gambar" class="form-label">Foto Mobil</label>
                        <div class="drag-area" id="dragArea">
                            <i class="bi bi-cloud-upload"></i>
                            <p>Drag & Drop gambar atau klik untuk memilih</p>
                            <input type="file" id="gambar" name="gambar" class="form-control" accept="image/*" hidden>
                        </div>
                        <div class="preview-container" id="previewContainer" style="display: none;">
                            <img id="preview" class="preview-image">
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <button type="submit" id="addData" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Tambah Mobil
                    </button>
                    <button type="button" id="batal" class="btn btn-secondary" onclick="history.back()">
                        <i class="bi bi-arrow-left"></i> Kembali
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Bootstrap JS (Optional) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        async function addData(event) {
            event.preventDefault(); // Prevent form refresh
        
            // Collect form data
            let formData = new FormData();
            formData.append("nama", document.getElementById("nama").value);
            formData.append("stok", document.getElementById("stok").value);
            formData.append("harga", document.getElementById("harga").value);
            formData.append("keterangan", document.getElementById("keterangan").value);
        
            // Include image if available
            let gambar = document.getElementById("gambar").files[0];
            if (gambar) {
                formData.append("gambar", gambar);
            }
        
            try {
                let response = await fetch("/api/items", {
                    method: "POST",
                    body: formData, // Send as FormData
                });
        
                if (response.ok) {
                    let result = await response.json();
                    alert("Data berhasil ditambahkan!");
                    window.location.href = "/"; // Redirect after success
                } else {
                    let error = await response.json();
                    console.error("Gagal menambahkan data:", error);
                    alert("Gagal menambahkan data: " + error.error);
                }
            } catch (err) {
                console.error("Terjadi kesalahan:", err);
                alert("Terjadi kesalahan saat menambahkan data!");
            }
        }

        // Tambahkan event listener pada form
        let form = document.getElementById("itemForm");
        form.addEventListener("submit", addData);

        function previewImage(input) {
            const preview = document.getElementById('preview');
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        // Enhanced drag and drop functionality
        const dragArea = document.getElementById('dragArea');
        const fileInput = document.getElementById('gambar');
        const previewContainer = document.getElementById('previewContainer');
        const preview = document.getElementById('preview');

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dragArea.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dragArea.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dragArea.addEventListener(eventName, unhighlight, false);
        });

        function highlight() {
            dragArea.classList.add('active');
        }

        function unhighlight() {
            dragArea.classList.remove('active');
        }

        dragArea.addEventListener('drop', handleDrop, false);
        dragArea.addEventListener('click', () => fileInput.click());

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const file = dt.files[0];
            handleFile(file);
        }

        fileInput.addEventListener('change', function() {
            handleFile(this.files[0]);
        });

        function handleFile(file) {
            if (file && file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    previewContainer.style.display = 'block';
                    dragArea.style.display = 'none';
                }
                reader.readAsDataURL(file);
            }
        }

        // Add form submission animation
        document.getElementById("itemForm").addEventListener("submit", async function(event) {
            event.preventDefault();
            const submitBtn = document.getElementById("addData");
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Menambahkan...';

            // ...existing submit logic...
        });
    </script>
</body>

</html>